____________________________________________


ATIVIDADE PRINCIPAL (1000XP)


Criar um CRUD completo usando HTML/CSS/JS e funcional (100XP);


O tema será aleatório e pode ser gerado pelo link no canal ⁠tema-atividade-principal  (podem acessar e rodar a roleta, tirem um print e mandem lá);
• Tema: Comidas
• Projeto: Geladeira do Sanji
*Sistema para auxiliar no controle das comidas que estão na geladeira e evitar roubo de comida.


Operação de CREATE deve ser feita através da submissão de um form (100XP);
• botão de + para abrir um pop-up com o form


Não se deve repetir o mesmo tipo de campo mais de duas vezes, pelo menos 5 campos, tentando usar tipos diferentes (como em sala);
• text (nome)
• url (foto)
• number (quantidade?)
• date (validade) *não pode entrar itens fora da validade
• select (tipo) *lanche | refeição | bebida
• checkbox / radio (estado) *pronto *para fazer


Operação de READ deve ser contemplada de duas formas (abaixo);

A primeira listando todas as entradas (uma lista em formato de catálogo, com imagens de preferência) (100XP);
• item resumido
E um pop-up (ou outro tipo de visualização) ao clicar em cada item da lista (READ de um elemento) (100XP);
• item detalhes

Operação de UPDATE, usando o mesmo form do CREATE, porém com os dados preenchidos, podendo atualizar todos ou nenhum (100XP);
•abrir o form novamente

Operação de DELETE, que deve remover um item, mas antes se certificando de que o usuário tem certeza de que quer deletá-lo (100XP);
• botao deletar chama o confirmar. o confirmar deleta.


Operações de CREATE, UPDATE e DELETE devem atualizar os dados no local storage e no CRUDCRUD (100XP);
???????????


Deve haver validação de cada campo, feita através do Javascript (não precisa daquela feita pelo HTML), bem como feito em sala (100XP);
• text *vazio
• url *vazio
• number *vazio e menor que 1
• date *vazio e menor que 'hoje'
• select (tipo) *vazio
• checkbox / radio (estado) *vazio


Utilizar o local storage para persistir os dados (100XP);
???????????


Registrar também os dados usando a API do CRUDCRUD (se quiser usar outra API, beleza) (100XP).
???????????



EXTRA (200XP):
Utilizar CSS para estilizar todas as páginas do formulário (ou alguma biblioteca de CSS) (100XP);
• bootstrap e css local

A página de listagem deve ser atualizada de 5 em 5 segundos, com base nos dados persistidos (100XP);
?????

EXTRA DO EXTRA (400XP):
Criar sistema de Login e Senha, só podendo acessar as páginas do sistema dessa forma.
?????????


